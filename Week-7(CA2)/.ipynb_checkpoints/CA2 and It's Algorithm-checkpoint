{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "52bbdc3d-18d7-492b-a974-004f7c8eafe3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "\n",
    "def calculate_charges(order_details):\n",
    "    total = sum(item[1] * item[2] for item in order_details)\n",
    "    if total < 1000:\n",
    "        discount = 0 \n",
    "    elif total < 2500:\n",
    "        discount = 10/100\n",
    "    elif total < 5000:\n",
    "        discount = 15/100\n",
    "    else:\n",
    "        discount = 25/100\n",
    "    discount_total = total * (1 - discount)\n",
    "    return total, discount, discount_total\n",
    "\n",
    "def show_discount_info(total, discount, discount_total):\n",
    "    discount_info = tk.Toplevel(root)\n",
    "    discount_info_title(\"Student Discount\")\n",
    "    tk.Label(discount_info, text=f\"Total Charges: N{total}\").pack()\n",
    "    tk.Label(discount_info, text=f\"Discount Applied: N{discount * 100}%\").pack()\n",
    "    tk.Label(discount_info, text=f\"Discount Total Charges: N{discount_total}\").pack()\n",
    "\n",
    "def order():\n",
    "    order_details = []\n",
    "    for category, items in menu_items.items():\n",
    "        for item, price in items.items():\n",
    "            quantity_str = quantity_entries[item].get()\n",
    "            if quantity_str and quantity_str.isdigit():\n",
    "                quantity = int(quantity_str)\n",
    "                if quantity > 0:\n",
    "                    order_details.append((item, price, quantity))\n",
    "    total, discount, discount_total = calculate_charges(order_details)\n",
    "    messagebox.showinfo(\"Order Summary\", f\"Customer Name: {customer_name}\\nTotal Charges: N{total}\")\n",
    "    show_discount_info(total, discount, discount_total)\n",
    "\n",
    "menu_items = {\n",
    "    \"Beverages\": {\"Water\": 200, \"Glass Drink (15cl)\": 150, \"PET Drink (35cl)\": 300, \"PET Drink (50cl)\": 350, \"Glass/Canned Malt\": 500, \"Fresh Yu\": 600, \"Pineapple Juice\": 350, \"Mango Juice\": 350, \"Zobo Drink\": 350},\n",
    "    \"Side Dishes\": {\"Savoury Beans\": 350, \"Roasted Sweet Potatoes\": 300, \"Fried Plantains\": 150, \"Mixed Vegetable Salad\": 150, \"Boiled Yam\": 150},\n",
    "    \"Rice/Pasta\": {\"Jollof Rice\": 350, \"Coconut Fried Rice\": 350, \"Jollof Spaghetti\": 350},\n",
    "    \"Soups & Swallows\": {\"Eba\": 100, \"Pounded Yam\": 100, \"Semo\": 100, \"Atama Soup\": 450, \"Egusi Soup\": 480},\n",
    "    \"Proteins\": {\"Sweet Chili Chicken\": 1100, \"Grilled Chicken Wings\": 400, \"Fried Beef\": 400, \"Fried Fish\": 500, \"Boiled Egg\": 200, \"Sauteed Sausages\": 200}\n",
    "}\n",
    "\n",
    "root = tk.Tk()\n",
    "root.title(\"PAU CAFETERIA\")\n",
    "root.geometry(\"500x200\")\n",
    "\n",
    "name_label = tk.Label(root, text=\"Enter Name: \")\n",
    "name_label.pack()\n",
    "name_entry = tk.Entry(root)\n",
    "name_entry.pack()\n",
    "\n",
    "quantity_entries = {}\n",
    "for category, items in menu_items.items():\n",
    "    for item, price in items.items():\n",
    "        tk.Label(root, text=item).pack()\n",
    "        quantity_entries[item] = tk.Entry()\n",
    "        quantity_entries[item].pack()\n",
    "\n",
    "tk.Button(root, text=\"Place Order\", command=order).pack()\n",
    "\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cb829744-be63-4570-9010-d81aa3b06dc8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Algorithm for CA2\n",
    "#1. Define a function calculate_charges to calculate the total charges, discounts, and discount total based on the order details.\n",
    "#2. Define a function show_discount_info to display discount information in a pop-up window.\n",
    "#3. Define a function order to process the customer's order, retrieve order details, calculate charges, and display an order summary.\n",
    "#4. Define a dictionary menu_items containing different categories of menu items along with their prices.\n",
    "#5. Initialize a tkinter window with the title \"PAU CAFETERIA\" and size 500x200.\n",
    "#6. Create a label and an entry widget to input the customer's name.\n",
    "#7. Iterate through the menu_items dictionary.\n",
    "#8. For each category and item, create a label to display the item's name.\n",
    "#9. Create an empty widget for each item to input the quantity ordered.\n",
    "#10. Create a \"Place Order\" button that calls the order function when clicked.\n",
    "#11. Start the tkinter main loop to display the GUI."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
