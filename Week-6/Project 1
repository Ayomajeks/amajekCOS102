{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0f8b8f3f-bd52-4e4b-9355-2de290c2f64d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "\n",
    "def calculate_charge():\n",
    "    weight = float(weight_entry.get())\n",
    "    place = place_entry.get()\n",
    "\n",
    "    if weight >= 10:\n",
    "        if place == \"Ibeju-lekki\":\n",
    "            charge = 5000\n",
    "        elif place == \"Epe\":\n",
    "            charge = 10000\n",
    "        else:\n",
    "            messagebox.showerror(\"Error\", \"Invalid Place\")\n",
    "            return\n",
    "    else:\n",
    "        if place == \"Ibeju-lekki\":\n",
    "            charge = 3500\n",
    "        elif place == \"Epe\":\n",
    "            charge = 5000\n",
    "        else:\n",
    "            messagebox.showerror(\"Error\", \"Invalid Place\")\n",
    "            return\n",
    "\n",
    "    messagebox.showinfo(\"Charge\", f\"The charge for your package is: â‚¦{charge}\")\n",
    "\n",
    "root = tk.Tk()\n",
    "root.title(\"Simi Services\")\n",
    "root.geometry(\"500x200\")\n",
    "\n",
    "weight_label = tk.Label(root, text=\"Input weight in kg: \")\n",
    "weight_label.pack()\n",
    "weight_entry = tk.Entry(root)\n",
    "weight_entry.pack()\n",
    "\n",
    "place_label = tk.Label(root, text=\"Where is delivery place: \")\n",
    "place_label.pack()\n",
    "place_entry = tk.Entry(root)\n",
    "place_entry.pack()\n",
    "\n",
    "calculate_button = tk.Button(root, text=\"Calculate charge\", command=calculate_charge)\n",
    "calculate_button.pack()\n",
    "\n",
    "root.mainloop()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
