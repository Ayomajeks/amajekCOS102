{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b806723b-a3d4-4592-b70c-5ac90f0aecdd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Admitted Candidates for Computer Science: [(256, 'Mathematics English Chemistry Physics Computer Science')]\n"
     ]
    }
   ],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "\n",
    "# Create main window\n",
    "root = tk.Tk()\n",
    "root.title(\"Admission Portal\")\n",
    "root.geometry(\"500x200\")\n",
    "\n",
    "admitted_compsci = []\n",
    "not_admitted_compsci = []\n",
    "\n",
    "def check_admission():\n",
    "    jamb_score = int(jamb_entry.get())\n",
    "    subjects = subjects_entry.get()\n",
    "    interview_pass = interviewpass_entry.get()\n",
    "\n",
    "    # Check admission criteria for Computer Science department\n",
    "    if jamb_score >= 250 and all(subject in subjects for subject in ['Mathematics', 'English', 'Physics', 'Chemistry', 'Computer Science']) and interview_pass == \"Yes\":\n",
    "        admitted_compsci.append((jamb_score, subjects))\n",
    "        print(\"Admitted Candidates for Computer Science:\", admitted_compsci)\n",
    "        messagebox.showinfo(\"Admission Status\", \"Congratulations! You have been admitted into the Computer Science department.\")\n",
    "    else:\n",
    "        not_admitted_compsci.append((jamb_score, subjects))\n",
    "        print(\"Not Admitted Candidates for Computer Science:\", not_admitted_compsci)\n",
    "        messagebox.showinfo(\"Admission Status\", \"Sorry, you did not meet the admission criteria for Computer Science.\")\n",
    "\n",
    "jamb_label = tk.Label(root, text=\"Enter JAMB Score:\")\n",
    "jamb_label.pack()\n",
    "jamb_entry = tk.Entry(root)\n",
    "jamb_entry.pack()\n",
    "\n",
    "subjects_label = tk.Label(root, text=\"Enter 5 key subjects:\")\n",
    "subjects_label.pack()\n",
    "subjects_entry = tk.Entry(root)\n",
    "subjects_entry.pack()\n",
    "\n",
    "interviewpass_label = tk.Label(root, text=\"Pass Interview\")\n",
    "interviewpass_label.pack()\n",
    "interviewpass_entry = tk.Entry(root)\n",
    "interviewpass_entry.pack()\n",
    "\n",
    "check_button = tk.Button(root, text=\"Check Admission\", command=check_admission)\n",
    "check_button.pack()\n",
    "\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d720cbb6-f95d-41a3-a936-4aa6f82653e3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
